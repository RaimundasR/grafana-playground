networks:
  monnet:

volumes:
  prometheus_data:
  loki_data:
  grafana_data:
  caddy_data:
  caddy_config:

services:
  # --- Core stack ---
  prometheus:
    image: prom/prometheus:v2.53.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports: [ "9090:9090" ]
    networks: [ monnet ]
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.1.0
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://localhost:3000
    volumes:
      - grafana_data:/var/lib/grafana
    ports: [ "3000:3000" ]
    networks: [ monnet ]
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.8
    command: [ "-config.file=/etc/loki/config.yml" ]
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - loki_data:/loki
    ports: [ "3100:3100" ]
    networks: [ monnet ]
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.8
    command: [ "-config.file=/etc/promtail/config.yml" ]
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /run/log/journal:/run/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
    networks: [ monnet ]
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:v1.8.2
    pid: host
    network_mode: host
    command:
      - --path.rootfs=/
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    ports: [ "8085:8080" ]
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks: [ monnet ]
    restart: unless-stopped

  blackbox:
    image: prom/blackbox-exporter:v0.25.0
    command: [ "--config.file=/etc/blackbox/blackbox.yml" ]
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox/blackbox.yml:ro
    ports: [ "9115:9115" ]
    networks: [ monnet ]
    restart: unless-stopped

  # --- HTTPS reverse proxy for pretty URLs & TLS ---
  caddy:
    image: caddy:2.8
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks: [ monnet ]
    restart: unless-stopped

  # --- NGINX apps + exporters ---
  nginx1:
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks: [ monnet ]
    restart: unless-stopped

  nginx2:
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks: [ monnet ]
    restart: unless-stopped

  nginx3:
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks: [ monnet ]
    restart: unless-stopped

  nginx1-exp:
    image: nginx/nginx-prometheus-exporter:0.11.0
    command: [ "-nginx.scrape-uri=http://nginx1:8080/stub_status" ]
    networks: [ monnet ]
    restart: unless-stopped

  nginx2-exp:
    image: nginx/nginx-prometheus-exporter:0.11.0
    command: [ "-nginx.scrape-uri=http://nginx2:8080/stub_status" ]
    networks: [ monnet ]
    restart: unless-stopped

  nginx3-exp:
    image: nginx/nginx-prometheus-exporter:0.11.0
    command: [ "-nginx.scrape-uri=http://nginx3:8080/stub_status" ]
    networks: [ monnet ]
    restart: unless-stopped

  # --- Apache apps + exporters ---
  apache1:
    image: httpd:2.4
    volumes:
      - ./apache/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
    networks: [ monnet ]
    restart: unless-stopped

  apache2:
    image: httpd:2.4
    volumes:
      - ./apache/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
    networks: [ monnet ]
    restart: unless-stopped

  apache1-exp:
    image: quay.io/lusitaniae/apache-exporter:v1.0.10
    command: [ "--scrape_uri=http://apache1:8080/server-status?auto" ]
    networks: [ monnet ]
    restart: unless-stopped

  apache2-exp:
    image: quay.io/lusitaniae/apache-exporter:v1.0.10
    command: [ "--scrape_uri=http://apache2:8080/server-status?auto" ]
    networks: [ monnet ]
    restart: unless-stopped

